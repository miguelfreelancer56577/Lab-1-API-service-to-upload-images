trigger:
- feature/Implementing-azure-pipeline
pool:
  vmImage: 'ubuntu-latest'

variables:
- group: dev-variable-group

steps:

- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'clean test package'
    #options: '-X'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    testRunTitle: 'SpringLabTest'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
  displayName: 'Maven'
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)/target'
    ArtifactName: 'Published'
    publishLocation: 'Container'
- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'JaCoCo'
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/target/site/jacoco/jacoco.xml'
    #pathToSources: '${System.DefaultWorkingDirectory}/src/main/java/'
    reportDirectory: '${System.DefaultWorkingDirectory}/target/site/jacoco/**'
    additionalCodeCoverageFiles: '${System.DefaultWorkingDirectory}/target/jacoco.exec'
    failIfCoverageEmpty: true
  displayName: 'JaCoCo'
  
- task: Bash@3
  inputs:
    targetType: 'filePath'
    filePath: '$(System.DefaultWorkingDirectory)/target/app-srv-plan-setup.sh'
    workingDirectory: '$(System.DefaultWorkingDirectory)/target/'
    failOnStderr: true
  displayName: 'CreationAppServicePlan'

- task: Bash@3
  inputs:
    targetType: 'filePath'
    filePath: '$(System.DefaultWorkingDirectory)/target/acr-setup.sh'
    workingDirectory: '$(System.DefaultWorkingDirectory)/target/'
    failOnStderr: true
  displayName: 'CreationContainerRegistry'

- task: Bash@3
  inputs:
    targetType: 'filePath'
    filePath: '$(System.DefaultWorkingDirectory)/target/web-app-setup.sh'
    workingDirectory: '$(System.DefaultWorkingDirectory)/target/'
    failOnStderr: false
  displayName: 'CreationWebApp'

- task: AzureAppServiceSettings@1
  inputs:
    azureSubscription: 'Suscripci√≥n de Azure 1(d19f674d-e7be-4536-a190-7b50b24cd379)'
    appName: 'mtr-$(AZ_ENV)-web-app'
    resourceGroupName: 'mtr-$(AZ_ENV)-grp'
    appSettings: |
      [
         {
          "name": "AZURE_STORAGE_CONNECTION_STRING",
          "value": "$(AZURE_STORAGE_CONNECTION_STRING)",
          "slotSetting": true
         },
         {
          "name": "SPRING_PROFILES_ACTIVE",
          "value": "$(SPRING_PROFILES_ACTIVE)",
          "slotSetting": true
         },
         {
          "name": "APP_CONFIG_IMAGE_SECURITY_ID",
          "value": "$(APP_CONFIG_IMAGE_SECURITY_ID)",
          "slotSetting": true
         },
         {
          "name": "APP_CONFIG_IMAGE_SECURITY_SECRET_KEY",
          "value": "$(APP_CONFIG_IMAGE_SECURITY_SECRET_KEY)",
          "slotSetting": true
         },
         {
          "name": "WEBSITES_PORT",
          "value": "$(WEBSITES_PORT)",
          "slotSetting": true
         }
      ]

- task: Bash@3
  inputs:
    targetType: 'filePath'
    filePath: '$(System.DefaultWorkingDirectory)/target/web-restart.sh'
    workingDirectory: '$(System.DefaultWorkingDirectory)/target/'
    failOnStderr: true
  displayName: 'RestartWebAppService'